1.  #define  _CRT_SECURE__NO_WARNINGS
#include  <iostream>
#include  <conio.h>
using  namespace  std;
void  main()
{
        int  v[50],i,poz=0,neg=0,n,nr1=0,nr2=0;
        cout<<"dati  lungimea  vector:";
        cin>>n;
        cout<<"dati  elementele  vectorului:  ";
        for  (i=0;i<=n-1;i++)  cin>>v[i];
        for  (i=0;i<=n-1;i++)
        {
                if  (v[i]>=0)  {poz=poz+v[i];nr1++;}
                else  {neg=neg+v[i];nr2++;}
        }
        cout<<"valoarea  medie  a  nr-elor  pozitive  este="<<poz/nr1;
        cout<<"\nvaloarea  medie  a  nr-elor  negative  este="<<neg/nr2;
        _getch();
}


2.  #define  _CRT_SECURE__NO_WARNINGS
#include  <iostream>
#include  <conio.h>
using  namespace  std;
void  main()
{
        int  v[50],i,  n,  min=INT_MAX;
        cout<<"dati  lungimea  vector:";
        cin>>n;
        cout<<"dati  elementele  vectorului:  ";
        for  (i=0;i<=n-1;i++)  cin>>v[i];
        for  (i=0;i<=n-1;i++)
                {
                        if  ((v[i]<min)&&(v[i]>=0))
                        {
                                min=v[i];
                        }
        }
        cout<<"\nCel  mai  mic  element  pozitiv  este:  "<<  min;
        _getch();
}


3.  
#define  _CRT_SECURE__NO_WARNINGS
#include  <iostream>
#include  <conio.h>
using  namespace  std;
void  vector(int  [],int);
void  main()
{
        int  v[10],i;
        cout<<"dati  elementele  vectorului:  ";
        for  (i=0;i<=9;i++)  cin>>v[i];
        vector(v,i);
        for  (i=0;i<=9;i++)  cout<<v[i]<<"  ";
        _getch();
}
void  vector(int  v[],int)
{
        int  aux,j,i;
        for  (i=0;i<=8;i++)
        {
                for  (j=i;j<=9;j++)
                        if  (v[j]<v[i])
                        {  
                                aux=v[i];
                                v[i]=v[j];
                                v[j]=aux;
                        }
        }
}


4)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <string.h>
using namespace std;
void main()
{
	char p[30];
	char parola[30] = "ceamaitareparola";
	int i = 1;
	cout << "scrie parola aici:";
	do
	{
		cin >> p;
		if (strcmp(p, parola) != 0)
		{
			if (i == 10)
			{
				cout << "\nnu stii parola las o moarta ";
				_getch();
				return;
			}
			i++; cout << "mai incearca ";
		}
		else { cout << "a-ti introdus parola corecta dupa " << i << " incercari"; _getch(); return; }
		
	} while (p != parola);
}

5)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <string.h>
using namespace std;
void main()
{
	char nume[30], prenume[30];
	cout << "dati numele: ";
	cin >> nume;
	cout << "dati prenumele: ";
	cin >> prenume;
	nume[0] = nume[0] - 32;
	prenume[0] = prenume[0] - 32;
	cout << nume << "  " << prenume;
	_getch();
}

6)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
void main()
{
	int a[10][10], b[10][10], i, j, n1, n2, s = 0, x , y ;
	int c[10][10];
	cout << "vom citi prima matrice,in felul urmator:dimensiune->enter,elemente\n";
	cin >> n1;
	for (i = 1; i <= n1; i++)
		for (j = 1; j <= n1; j++)
		cin >> a[i][j];
	cout << "\nvom citi a doua matrice la fel ca prima\n";
	cin >> n2;
	for (i = 1; i <= n2; i++)
		for (j = 1; j <= n2; j++)
			cin >> b[i][j];
	cout << "in prima matrice avem elemente pare pe pozitiile:";
	for (i = 1; i <= n1; i++)
		for (j = 1; j <= n1; j++)
		{
			if (a[i][j] % 2 == 0) cout << "\nlinia " << i << " coloana " << j;
			else s = s + a[i][j];
		}
	cout << "\nin a doua matrice avem elemente pare pe pozitiile:";
	for (i = 1; i <= n2; i++)
		for (j = 1; j <= n2; j++)
		{
			if (b[i][j] % 2 == 0) cout << "\nlinia " << i << " coloana " << j;
			else s = s + b[i][j];
		}
	cout << "\nsuma elementelor impare din cele 2 matrici este: " << s;
	cout << "\nmatricea ce rezulta prin insumarea celor 2 matrici este:\n";
	i = 1; j = 1;
	if (n1 <= n2)
	{
		for (x = 1; x <= n1; x++)
		{
			for (y = 1; y <= n1; y++)
			{
				c[x][y] = a[i][j] + b[i][j];
				cout << c[x][y] << " ";
				j++;
			}
			cout << "\n";
			i++;
			j = 1;
		}
	}
	else
	{
		for (x = 1; x <= n2; x++)
		{
			for (y = 1; y <= n2; y++)
			{
				c[x][y] = a[i][j] + b[i][j];
				cout << c[x][y] << " ";
				j++;
			}
			cout << "\n";
			i++;
			j = 1;
		}
	}
	_getch();
}

7)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
void main()
{
	float a[3][3];
	int i, j, x, y;
	float s = 0, aux;
	float v[3];
	//citire
	for (i = 0; i <= 2; i++)
		for (j = 0; j <= 2; j++)
			cin >> a[i][j];
	//crearea vectorului de sume
	x = 0;
	for (i = 0; i <= 2; i++)
	{
		for (j = 0; j <= 2; j++)
		{
			s = s + a[j][i];
		}
		v[x] = s;
		x++;
		s = 0;
	}
	//permutare
	for (x = 0; x <= 1; x++)
		for (y = x + 1; y <= 2; y++)
		{
			if (v[x] > v[y])
			{
				aux = v[x];
				v[x] = v[y];
				v[y] = aux;
				for (i = 0; i <= 2; i++)
				{
					aux = a[i][x];
					a[i][x] = a[i][y];
					a[i][y] = aux;
				}
			}
		}	
	//afisare
	cout << "\n";
	for (i = 0; i <= 2; i++)
	{
		for (j = 0; j <= 2; j++)
			cout << a[i][j] << " ";
		cout << "\n";
	}
	_getch();
}

8)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
float v[20],s;
int n, i;
float valmedie(float v[], int n);
int valmici(float x);
void main()
{
	cin >> n;
	for (i = 1; i <= n; i++) cin >> v[i];
	cout << "valoarea medie a elementelor este: " << valmedie(v, n);
	cout << "\nelementele mai mari decat val medie sunt: ";
	s = valmedie(v, n);
	for (i = 1; i <= n; i++)
	if(valmici(v[i])==0) cout<<v[i]<<" ";
	_getch();
}
float valmedie(float v[],int n)
{
	float s = 0,med=0;
	for (i = 1; i <= n; i++) s = s + v[i];
	med = s / n;
	return med;
}
int valmici(float x)
{
		if (x > s) return 0;
		else return 1;
}


9)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
void main()
{
	int v[10];
	int i, n,nr=0;
	cin >> n;
	for (i = 1; i <= n; i++) cin >> v[i];
	cout << "elementele negative impare sunt: ";
	for (i = 1; i <= n; i++)
	{
		if ((v[i]%2!=0) && (v[i] < 0))
		{
			nr++;
			cout << v[i] << " ";
		}
	}
	cout << "si sunt in nr de:" << nr;
	_getch();
}

10)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
int v[10], n, i;
void f(int v[], int n);
void main()
{
	cin >> n;
	for (i = 1; i <= n; i++) cin >> v[i];
	f(v, n);
	_getch();
}
void f(int v[], int n)
{
	int k = 0, a[10];
	for (i = 1; i <= n; i++)
		if (v[i] > 0) k++;
	for (i = 1; i <= n; i++) a[i] = v[i] % k;
	for (i = 1; i <= n; i++) cout <<a[i] <<" ";
}

11)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <string.h>
#include <string>
#include <stdio.h>
using namespace std;
char s[100];
int i;
char* funafis(char x[]);
char* funinv(char x[]);
char* funafispar(char x[]);
void main()
{
	cin >> s;
	funafis(s);
	funinv(s);
	funafispar(s);
	_getch();
}
char* funafis(char x[])
{
	for (i = 0; i <= strlen(x); i++) cout << x[i] ;
	return 0;
}
char* funinv(char x[])
{
	cout << "\nsirul inversat va fii:";
	char sir[100];
	int k = strlen(x);
	for (i = strlen(x); i >= 0; i--)
	{
		sir[strlen(x) - i] = x[i];
	}
	for (i = 0; i <= strlen(x); i++) cout << sir[i];
	return 0;
}
char* funafispar(char x[])
{
	cout << "\nsirul format din elem de pe poz pare ale sirului inversat este:\n";
	char sir[100];
	int k = strlen(x);
	for (i = strlen(x); i >= 0; i--)
	{
		sir[strlen(x) - i] = x[i];
	}
	for (i = 1; i <= strlen(x); i++)
		if (i % 2 == 0) cout << sir[i];
	return 0;
}

12)
#define CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
using namespace std;
void citire();
void afisare();
void operatii(int a[30][30],int n,int m);
int a[30][30], n, m;
int i, j,s=0;
void main()
{
	citire();
	afisare();
	operatii(a, n, m);
	_getch();
}
void citire()
{
	cin >> n >> m;
	for (i = 1; i <= n; i++)
		for (j = 1; j <= m; j++) cin >> a[i][j];
}
void afisare()
{
	cout << endl;
	for (i = 1; i <= n; i++)
	{
		for (j = 1; j <= m; j++)
			cout << a[i][j] << " ";
		cout << "\n";
	}
}
void operatii(int a[30][30], int n, int m)
{
	int c,s=0;
	if (n == m)
	{
		cout << "elementele de pe diagonala sec sunt:";
		for (i = 1; i <= n; i++)
			for(j=1;j<=m;j++)
			if ((i + j) == (n + 1)) cout << a[i][j] << " ";
	}
	else
	{
		cout << "pe ce coloana vrei sa calculam suma? ";
		cin >> c;
		for (i = 1; i <= n; i++) s = s + a[i][c];
		cout << "suma elem de pe coloana " << c << " este=" << s;

	}


